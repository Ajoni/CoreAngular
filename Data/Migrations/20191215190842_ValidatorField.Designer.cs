// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20191215190842_ValidatorField")]
    partial class ValidatorField
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Fields.DataTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BasedOnId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BasedOnId");

                    b.ToTable("DataTemplates");
                });

            modelBuilder.Entity("Entities.Fields.Field", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DataTemplateId")
                        .HasColumnType("int");

                    b.Property<int>("FieldType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DataTemplateId");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("Entities.Fields.FieldValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FieldId")
                        .HasColumnType("int");

                    b.Property<int?>("FormDataId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("FormDataId");

                    b.ToTable("FieldValues");
                });

            modelBuilder.Entity("Entities.Fields.FormData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DataTemplateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DataTemplateId");

                    b.ToTable("FormDatas");
                });

            modelBuilder.Entity("Entities.Fields.Validator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Validators");
                });

            modelBuilder.Entity("Entities.Form.ValidatorField", b =>
                {
                    b.Property<int>("FieldId")
                        .HasColumnType("int");

                    b.Property<int>("ValidatorId")
                        .HasColumnType("int");

                    b.HasKey("FieldId", "ValidatorId");

                    b.HasIndex("ValidatorId");

                    b.ToTable("ValidatorField");
                });

            modelBuilder.Entity("Entities.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Salt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Entities.Fields.DataTemplate", b =>
                {
                    b.HasOne("Entities.Fields.DataTemplate", "BasedOn")
                        .WithMany()
                        .HasForeignKey("BasedOnId");
                });

            modelBuilder.Entity("Entities.Fields.Field", b =>
                {
                    b.HasOne("Entities.Fields.DataTemplate", null)
                        .WithMany("Fields")
                        .HasForeignKey("DataTemplateId");
                });

            modelBuilder.Entity("Entities.Fields.FieldValue", b =>
                {
                    b.HasOne("Entities.Fields.Field", "Field")
                        .WithMany()
                        .HasForeignKey("FieldId");

                    b.HasOne("Entities.Fields.FormData", null)
                        .WithMany("Values")
                        .HasForeignKey("FormDataId");
                });

            modelBuilder.Entity("Entities.Fields.FormData", b =>
                {
                    b.HasOne("Entities.Fields.DataTemplate", "DataTemplate")
                        .WithMany()
                        .HasForeignKey("DataTemplateId");
                });

            modelBuilder.Entity("Entities.Form.ValidatorField", b =>
                {
                    b.HasOne("Entities.Fields.Field", "Field")
                        .WithMany("Validators")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Fields.Validator", "Validator")
                        .WithMany("ValidatedFields")
                        .HasForeignKey("ValidatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
